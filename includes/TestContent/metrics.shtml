<section>
<header><h1>Metrics<sup>h1</sup></h1><p>Units of measurement for everything.</p></header>
<h2>Principles<sup>h2</sup></h2>
	<p>We are designing systems. In order to maintain consistency within the UI we need to build using a predefined measurement system.</p>
<h3>Relative and fixed sizing<sup>h3</sup></h3>
<p>Designing for screens of uncertain dimensions demands that elements have the ability to adjust their own size properties based on the context they exist in. Some constraints do, however need to be established in order that these elements do not grow or shrink to unusable sizes. In CSS we will make us of the <code>max-width</code> and <code>min-width</code> methods for setting a minimum or maximum width or height to an element (<a href="http://caniuse.com/#search=max-">http://caniuse.com/#search=max-</a>). We refer to this method of sizing as 'Fluid'.</p>
<p>EM, 16px...</p>
<p>There are no hard fast rules dictating what size elements or fonts should be but we need to start somewhere and since most modern browsers (list here) set their default font size rendering to 16px which becomes equal to 1em  we can start here. From this 'em' unit we can size both fonts and containing elements, grids, buttons, margins, paddings etc. In doing so we also create a form of dynamic grid system. Global control of elements will be via: <code>font-size: xx%;</code></p>
<p>If we stick to full and half ems (16px and 8px units) in everything we make then we will have a very consistent build.</p>
<h3>Units:</h3>
<p style="margin-bottom: 0.5em;">0.5em - 8px
<div style="width: 0.5em;height: 0.5em;background-color: #000;margin:0em;"></div></p>
<p style="margin-bottom: 0.5em;">1em - 16px
<div style="width: 1em;height: 1em;background-color: #000;margin: 0em;"></div></p>
<p style="margin-bottom: 0.5em;">2em - 32px
<div style="width: 2em;height: 2em;background-color: #333;margin: 0em;"></div></p>
<p style="margin-bottom: 0.5em;">2.5em - 40px
<div style="width: 2.5em;height: 2.5em;background-color: #333;margin: 0em;"></div></p>
<p style="margin-bottom: 0.5em;">3em - 48px
<div style="width: 3em;height: 3em;background-color: #666;margin: 0em;"></div></p>
<p style="margin-bottom: 0.5em;">4em - 64px
<div style="width: 4em;height: 4em;background-color: #999;margin: 0em;"></div></p>
</div>
<h4>Vertical baseline</h4>
<p>The vertical baseline sets the vertical alignment of an element. The grid background on this guide is used to align elements to the vertical baseline.</p>
<p><a href="http://www.smashingmagazine.com/2012/12/17/css-baseline-the-good-the-bad-and-the-ugly/">Article about CSS baselines.</a></p>
</section>